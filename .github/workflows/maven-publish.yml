name: Teste Standard Version

on:
  # Acione o fluxo de trabalho na solicitação push ou pull,
  # mas apenas para a ramificação principal.
  push:
    branches:
    - main
    - develop
    - 'release/**'
    tags:        
    - v*
    paths-ignore:
    - '**.sh'
    - '**.yml'
  pull_request:
    branches:
    - main
    - develop
    - 'release/**'
    tags:        
    - v*

jobs:
  Checktyle:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@main
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'
        architecture: x64
        cache: maven
    - name: Verificando estilo do código
      run: |
        mvn -q -am checkstyle:check
  PMD:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@main
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'
        architecture: x64
        cache: maven
    - name: Análise estática de código com PMD
      run: |
        mvn -q -am pmd:check
  Test:
    needs: [Checktyle, PMD]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@main
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        java-version: '11'
        distribution: 'adopt'
        architecture: x64
        cache: maven
    - name: Test com verificação de cobertura
      run: |
        mvn -q -am clean verify
  Build:
    needs: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@main
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'
        architecture: x64
        cache: maven
    - name: Build with Maven
      run: |
        mvn -q -am clean package install -Dmaven.test.skip=true
    - run: mkdir staging && cp target/*.jar staging
    - uses: actions/upload-artifact@main
      with:
        name: Package
        path: staging
